# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Dataset")
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
library(caret)
library(caret)
library(e1071)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Overview of algos supported by caret
names(getModelInfo())
# Train a model
model_knn <- train(ds.training[, 1:222], ds.training[, 223], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:222])
# Evaluate the predictions
table(predictions)
# Confusion matrix
confusionMatrix(predictions,ds.test[,223])
View(api.csv)
View(ds.training)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
library(caret)
library(e1071)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Overview of algos supported by caret
names(getModelInfo())
# Train a model
model_knn <- train(ds.training[, 1:272], ds.training[, 273], method='knn')
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
# Confusion matrix
confusionMatrix(predictions,ds.test[,273])
nr_correct<- predictions == ds.test[,272]
nr_correct<- predictions == ds.test[,272]proportion_correct <- nrow(ds.test[correct_items,])/nrow(ds.test)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[correct_items,])/nrow(ds.test)
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
View(api.csv)
library(caret)
library(e1071)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Overview of algos supported by caret
names(getModelInfo())
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
library(caret)
library(e1071)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Overview of algos supported by caret
names(getModelInfo())
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
# Confusion matrix
confusionMatrix(predictions,ds.test[,273])
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='svm')
View(ds.test)
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
library(caret)
library(e1071)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
set.seed(3002)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
nr_correct<- predictions == ds.test[,272]
ds$Score<-NULL
# Evaluate the predictions
table(predictions)
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
library(caret)
library(e1071)
set.seed(3002)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model_knn <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model_knn,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
save(model, 'knn_model.rda')
save(model, file = 'knn_model.rda')
# Train a model
model <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
save(model, file = 'knn_model.rda')
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Dataset")
library(caret)
library(e1071)
set.seed(3002)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model <- train(ds.training[, 1:271], ds.training[, 272], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model,ds.test[,1:271])
# Evaluate the predictions
table(predictions)
nr_correct<- predictions == ds.test[,272]
proportion_correct <- nrow(ds.test[nr_correct,])/nrow(ds.test)
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
save(model, file = 'knn_model.rda')
fileConn<-file("accuracies.txt")
accuracy <- nrow(ds.test[nr_correct,])/nrow(ds.test)
writeLines(c("Accuracy", accuracy), fileConn)
close(fileConn)
fileConn<-file("accuracies.txt")
accuracy <- nrow(ds.test[nr_correct,])/nrow(ds.test)
writeLines(paste("Accuracy: ", accuracy), fileConn)
close(fileConn)
fileConn<-file("accuracies.txt")
accuracy <- nrow(ds.test[nr_correct,])/nrow(ds.test)
writeLines(paste("Accuracy:", accuracy), fileConn)
close(fileConn)
fileConn<-file("accuracies.txt")
accuracy <- round((nrow(ds.test[nr_correct,])/nrow(ds.test)) * 100, digits=2)
writeLines(paste("Accuracy:", accuracy), fileConn)
close(fileConn)
fileConn<-file("accuracies.txt")
accuracy <- round((nrow(ds.test[nr_correct,])/nrow(ds.test)) * 100, digits=2)
writeLines(paste("Accuracy: ", accuracy, "%", sep = ""), fileConn)
close(fileConn)
cMatrix = confusionMatrix(predictions, ds.test[,272])
View(cMatrix)
fileConn<-file("accuracies.txt")
accuracy <- round((nr_correct/nr_test_items) * 100, digits=2)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""),
cMatrix.table)
writeLines(output, fileConn)
# Evaluate the predictions
correct_predictions<- predictions == ds.test[,272]
cMatrix = confusionMatrix(predictions, ds.test[,272])
nr_correct<-nrow(ds.test[correct_predictions,])
nr_test_items<-nrow(ds.test)
nr_incorrect<-nr_test_items - nr_correct
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
save(model, file = 'knn_model.rda')
fileConn<-file("accuracies.txt")
accuracy <- round((nr_correct/nr_test_items) * 100, digits=2)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""),
cMatrix.table)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""),
cMatrix$table)
writeLines(output, fileConn)
close(fileConn)
print("~~ Model Production: Complete ~~")
View(ds)
View(cMatrix)
cMatrix[["byClass"]]
fileConn<-file("accuracies.txt")
accuracy <- round((nr_correct/nr_test_items) * 100, digits=2)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""),
cMatrix$byClass)
writeLines(output, fileConn)
close(fileConn)
print("~~ Model Production: Complete ~~")
format.data.frame(cMatrix$byClass)
fileConn<-file("accuracies.txt")
accuracy <- round((nr_correct/nr_test_items) * 100, digits=2)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""),
print(cMatrix$byClass))
writeLines(output, fileConn)
close(fileConn)
library(caret)
print("~~ Model Production: Started ~~")
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Dataset")
library(caret)
library(e1071)
set.seed(3002)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model <- train(ds.training[, 1:277], ds.training[, 278], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model,ds.test[,1:277])
# Evaluate the predictions
correct_predictions<- predictions == ds.test[,278]
cMatrix = confusionMatrix(predictions, ds.test[,278])
nr_correct<-nrow(ds.test[correct_predictions,])
nr_test_items<-nrow(ds.test)
nr_incorrect<-nr_test_items - nr_correct
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
save(model, file = 'knn_model.rda')
fileConn<-file("accuracies.txt")
accuracy <- round((nr_correct/nr_test_items) * 100, digits=2)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""))
writeLines(output, fileConn)
close(fileConn)
write.csv(cMatrix$byClass, file = "confusionMatrix.csv")
write.csv(cMatrix$byClass, file = "confusionMatrix.csv")
print("~~ Model Production: Complete ~~")
nrow(ds$MalwareID == 1)
library(caret)
nrow(ds$MalwareID == 2)
View(ds)
lastCol <- ncol(ds)
malwareID_Col <- ncol(ds)
lastFeature_Col <- malwareID_Col - 1
print("~~ Model Production: Started ~~")
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Dataset")
library(caret)
library(e1071)
set.seed(3002)
# Dataset Prep
api.csv<-read.csv("api_results.csv")
sample.csv<-read.csv("sample_list.csv")
ds<-merge(x=api.csv, y=sample.csv, by.x="SampleName", by.y="MD5hash")
ds$SampleName<-NULL
ds$SampleID<-NULL
ds$Score<-NULL
ds$MalwareID = as.factor(ds$MalwareID)
malwareID_Col <- ncol(ds)
lastFeature_Col <- malwareID_Col - 1
# Create index to split based on labels
index <- createDataPartition(ds$MalwareID, p=0.75, list=FALSE)
# Subset training set with index
ds.training <- ds[index,]
# Subset test set with index
ds.test <- ds[-index,]
# Train a model
model <- train(ds.training[, 1:lastFeature_Col], ds.training[, malwareID_Col], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model,ds.test[,1:lastFeature_Col])
# Evaluate the predictions
correct_predictions<- predictions == ds.test[,malwareID_Col]
cMatrix = confusionMatrix(predictions, ds.test[,malwareID_Col])
nr_correct<-nrow(ds.test[correct_predictions,])
nr_test_items<-nrow(ds.test)
nr_incorrect<-nr_test_items - nr_correct
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
save(model, file = 'knn_model.rda')
fileConn<-file("accuracies.txt")
accuracy <- round((nr_correct/nr_test_items) * 100, digits=2)
output <- c(paste("Accuracy: ", accuracy, "%", sep = ""),
"",
paste("Correct: ", nr_correct, " Predictions", sep = ""),
paste("Incorrect: ", nr_incorrect, " Predictions", sep = ""),
paste("Total: ", nr_test_items, " Test Items", sep = ""))
writeLines(output, fileConn)
close(fileConn)
write.csv(cMatrix$byClass, file = "confusionMatrix.csv")
print("~~ Model Production: Complete ~~")
# Train a model
model <- train(ds.training[, 1:lastFeature_Col], ds.training[, malwareID_Col], method='knn')
# Predict the labels of the test set
predictions<-predict(object=model,ds.test[,1:lastFeature_Col])
# Evaluate the predictions
correct_predictions<- predictions == ds.test[,malwareID_Col]
cMatrix = confusionMatrix(predictions, ds.test[,malwareID_Col])
nr_correct<-nrow(ds.test[correct_predictions,])
nr_test_items<-nrow(ds.test)
setwd("c:/Users/thomaspickup/icloudDrive/Documents/University/CSC3002/Assignment/CSC3002-Project/Model")
nr_incorrect<-nr_test_items - nr_correct
